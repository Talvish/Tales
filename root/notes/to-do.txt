Multi-type contracts
-------------------------
- support the multi-type options for parameters and returns from operations
  - need to have the key, value parameters for types
  - the response object would need to be aware of the ResourceResult type to verify the type of result class works and can be cast to properly

- need to support simple type translator support where there are names that need to be used as references in the multi-type objects and in the contract

- profile: http://yourkit.com/home/index.jsp

- consider adding some form of access-origin header support for resource servlet's automatically in case called by javascript
  - see: http://www.w3.org/TR/cors/
  - see: http://stackoverflow.com/questions/1653308/access-control-allow-origin-multiple-origin-domains/12414239#12414239 


CORS Support
------------
- Ease the allow side by marking the resource as CORS aware
- Verify the origin against a set of configurable origins
- Make it so that if there is any form of error of any kind and there is an Origin header that it is sets the allows header
- Don't set the allows header if there is no origin header
- look here: http://stackoverflow.com/questions/1653308/access-control-allow-origin-multiple-origin-domains

Cookie Support
--------------
- Make cookies part of the ResourceResult

General Website handling
---------------
- Allow custom error handling pages
  - servlet context's have error handlers (sent in the constructor) that can be set that could potentially handle this, could 
    support a way to register a location to cover
- Allow binding websites (which could mean removing the WebsiteInterface)
- Support a way for facades to report more than one failure in parameters and report them all ack
  maybe can use lambdas to do this but the exception should occur once

Signing Support
-------------------
- fix or remove what is there

Services
-------------------
- Change the 'stop'/'kill'/'suspend'/'resume' control commands to take time periods, which will wait prior to executing (send a 202 back?)

Async Support
--------------------
- Look at properly async handling and funneling

Misc
--------------------
- Increase HTTP verb supporting, in particular OPTIONS, which may be needed for CORS support
- We may want cookies and headers to be part of the matching spec for which method to run
- Consider making it so parameters can get validation annotations
- Currently bad parameters send back just a parameter name in the result body, more detail would be good and 
  I want to think about where it should live
- A way to send back the set of parameters that are not working
- support listening to changes in config
- json-based config, for supporting sensitive params
- network based config
- map source config should copy the input 

Update Admin to use Resource Contracts
------------------------------------------------
Examples:
/status/
/status/status/values/{name}
/status/interfaces/{name}
/status/interfaces/{name}/status/contracts/{name}
/status/interfaces/{name}/status/contracts/{name}/values/{name} 